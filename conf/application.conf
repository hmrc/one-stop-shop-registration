# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = one-stop-shop-registration

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "config.Module"

play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

mongodb {
  uri = "mongodb://localhost:27017/one-stop-shop-registration"
  timeToLiveInHours = 1
  timeToLiveInDays = 28
  encryption {
    key = "VqmXp7yigDFxbCUdDdNZVIvbW6RgPNJsliv6swQNCL8="
  }
}

features {
    duplicateRegistrationIntoRepository = true
    maxRetryCount = 20
    delay = 1000
    externalEntry = {
     ttlInDays = 1
     urls = {
       journeyStart = "/pay-vat-on-goods-sold-to-eu/northern-ireland-register"
       noMoreWelshJourneyStart = "/pay-vat-on-goods-sold-to-eu/northern-ireland-register/no-welsh-service"
     }
    }
    registrationCache = {
      ttlInMins = 60
      enabled = true
    }
    fallbackEnrolment = {
      traders = {
        1 {
          vrn = "610000001",
          subscriptionId = "subscription-610000001"
        }
      }
    }
    enroll-historic-registration = {
      enabled = true,
      historic-traders = {
        1 {
          vrn = "",
          groupId = "",
          userId = ""
        }
      }
    }

    cleanupOldCollections = {
      enabled = false,
      collections = ["registrations", "registrations-backup"]
    }
}

ossEnrolmentKey = "HMRC-OSS-ORG"

microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }

    get-vat-info {
      protocol           = http
      host               = localhost
      port               = 10203
      basePath           = "one-stop-shop-registration-stub/"
      authorizationToken = secret
      environment        = test
    }

    if {
      protocol           = http
      host               = localhost
      port               = 10203
      basePath           = "one-stop-shop-registration-stub/"
      authorizationToken = secret
      environment        = test
    }

    enrolments {
        protocol           = http
        host               = localhost
        port               = 10203
        basePath           = "one-stop-shop-registration-stub/"
        callbackBaseUrl    = "http://localhost:10201"
    }

    enrolment-store-proxy {
        protocol           = http
        host               = localhost
        port               = 10203
        basePath           = "one-stop-shop-registration-stub/"
    }

    core-validation {
      protocol           = http
      host               = localhost
      port               = 10203
      basePath           = "one-stop-shop-registration-stub/vec/ossregistration/regvalidation/v1"
      authorizationToken = secret
      environment        = test
    }

    display-registration {
      protocol           = http
      host               = localhost
      port               = 10203
      basePath           = "one-stop-shop-registration-stub/"
      authorizationToken = secret
      environment        = test
    }

    amend-registration {
      protocol           = http
      host               = localhost
      port               = 10203
      basePath           = "one-stop-shop-registration-stub/"
      authorizationToken = secret
      environment        = test
    }

    channel-preference {
      protocol           = http
      host               = localhost
      port               = 10203
      basePath           = "one-stop-shop-registration-stub/"
      authorizationToken = secret
      environment        = test
    }
  }
}